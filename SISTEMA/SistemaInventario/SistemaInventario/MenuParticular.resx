<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABMAGEDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6
        QTxLdE/61vyFWIvEt1/z1b8h/jXIx6oasQarz979a/M5Tif1FToTZ1ieIbot/rG/75FSR+Ibr/nq35Cu
        Zj1X3qaLUt7Yzz1xXLOquh1xwcrXOmHiK4I/1x/Jf8akHiS4x/rT+Q/xrjtN8Xabqt7dW9rfWtzcWRxc
        xRTK7wH0cA5X8avi7KPg/L6A1Eq1naSsbwwakrx19DoD4gnz/rT+QpsniC4x/rj+dYT3uR1qKbUhGvzM
        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
</value>
  </data>
</root>